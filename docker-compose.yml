version: "3"
services:
  nosql-db:
    image: mongo
    ports:
      - "27018:27017"
    container_name: nosql-db
    volumes:
      - ./db/:/data/db
  client:
    build:
      dockerfile: Dockerfile
      context: ./client
    container_name: client
    image: "eagleapps/client:latest"
    ports:
      - "8001:8001"
    restart: always
    depends_on:
      - "nosql-db"
    volumes:
      - .:/app
      - /app/client/node_modules
    env_file:
      - ./client/.env
  servicesapi:
    build:
      dockerfile: Dockerfile
      context: ./services
    container_name: servicesapi
    image: "eagleapps/services:latest"
    ports:
      - "6008:6008"
    restart: always
    depends_on:
      - "nosql-db"
      - "rabbitmq"
    volumes:
      - .:/app
      - /app/services/node_modules
    env_file:
      - ./services/.env

  fault:
    build:
      dockerfile: Dockerfile
      context: ./fault
    container_name: fault
    image: "eagleapps/fault:latest"
    ports:
      - "8002:8002"
    restart: always
    depends_on:
      - "nosql-db"
    volumes:
      - .:/app
      - /app/fault/node_modules
    env_file:
      - ./fault/.env
  utility:
    build:
      dockerfile: Dockerfile
      context: ./utility
    container_name: utility
    image: "eagleapps/utility:latest"
    ports:
      - "8003:8003"
    restart: always
    depends_on:
      - "nosql-db"

    volumes:
      - .:/app/
      - /app/utility/node_modules
    env_file:
      - ./utility/.env
  technician:
    build:
      dockerfile: Dockerfile
      context: ./technician
    container_name: technician
    image: "eagleapps/technician:latest"
    ports:
      - "4004:4004"
    restart: always
    depends_on:
      - "nosql-db"

    volumes:
      - .:/app/
      - /app/technician/node_modules
    env_file:
      - ./technician/.env
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    # environment:
    # - RABBITMQ_DEFAULT_USER=u8hrtil
    # - RABBITMQ_DEFAULT_PASS=kiglond85
    #volumes:
        #- data/:/var/lib/rabbitmq/
        #- log:/var/log/rabbitmq
    ports:
    # AMQP protocol port
    - '5672:5672'
    # HTTP management UI
    - '15672:15672'
  # billing:
  #   build:
  #     dockerfile: Dockerfile
  #     context: ./billing
  #   container_name: billing
  #   ports:
  #     - "8005:8005"
  #   restart: always
  #   depends_on:
  #     - "nosql-db"

  #   volumes:
  #     - .:/app/
  #     - /app/billing/node_modules
  #   env_file:
  #     - ./billing/.env
  notification:
    build:
      dockerfile: Dockerfile
      context: ./notification
    container_name: notification
    image: "eagleapps/notification:latest"
    ports:
      - "8006:8006"
    restart: always
    depends_on:
      - "nosql-db"
      - "rabbitmq"

    volumes:
      - .:/app/
      - /app/notification/node_modules
    env_file:
      - ./notification/.env

  # deliveries:
  #   build:
  #     dockerfile: Dockerfile
  #     context: ./deliveries
  #   container_name: deliveries
  #   ports:
  #     - "8007:8007"
  #   restart: always
  #   depends_on:
  #     - "nosql-db"

  #   volumes:
  #     - .:/app/
  #     - /app/deliveries/node_modules
  #   env_file:
  #     - ./deliveries/.env
  
  specials:
    build:
      dockerfile: Dockerfile
      context: ./specials
    container_name: specials
    image: "eagleapps/specials:latest"
    ports:
      - "6009:6009"
    restart: always
    depends_on:
      - "nosql-db"

    volumes:
      - .:/app/
      - /app/specials/node_modules
    env_file:
      - ./specials/.env

  subscriptions:
    build:
      dockerfile: Dockerfile
      context: ./subscriptions
    container_name: subscriptions
    image: "eagleapps/subscriptions:latest"
    ports:
      - "7001:7001"
    restart: always
    depends_on:
      - "nosql-db"

    volumes:
      - .:/app/
      - /app/subscriptions/node_modules
    env_file:
      - ./subscriptions/.env

  nginx-proxy:
    build:
      dockerfile: Dockerfile
      context: ./proxy
    image: "eagleapps/nginx-proxy:latest"
    depends_on:
      - client
      - fault
      - utility
      - technician
      - services
      - specials
      # - billing
      - notification
      # - deliveries
      - subscriptions
    ports:
      - 8081:8081
